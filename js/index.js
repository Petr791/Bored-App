const appTitleNode = document.querySelector('#app-title');
const appTextNode = document.querySelector('#app-text');
const appBtnNode = document.getElementById('app-btn');
const bodyNode = document.querySelector('body');
const url = 'https://apis.scrimba.com/bored/api/activity';


/*–í–∞—Ä–∏–∞–Ω—Ç 1. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è JS */

/* JS. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é fetch */
appBtnNode.addEventListener('click', getRandomActivity);

/* JS. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é XMLHttpRequest */
//appBtnNode.addEventListener('click', getRandomActivityXHR);

/* –ü—Ä–æ–≤–µ—Ä–∫–∞ */
//appBtnNode.addEventListener('click', debugging);

// —Ñ—É–Ω–∫—Ü–∏—è —Å fetch
function getRandomActivity() {
	fetch(url)
		.then(data => data.json())
		.then(res => {
			if (res.status == 'success') {
				return;
			}
			console.log(res.activity);

			bodyNode.classList.add('activity-bg');
			appTitleNode.innerText = 'üöÄ –£—Ä–∞, —Ç–µ–ø–µ—Ä—å –Ω–µ —Å–∫—É—á–Ω–æ ü™ê'
			appTextNode.innerHTML = `üí•<span class="span">&nbsp;${res.activity}&nbsp;</span>üí•`;
		})

}


// –§—É–Ω–∫—Ü–∏—è —Å —É—Å—Ç–∞—Ä–µ–≤—à–∏–º —Å–ø–æ—Å–æ–±–æ–º (–æ–±—ä–µ–∫—Ç XMLHttpRequest)
function getRandomActivityXHR() {

	// 1. –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π XMLHttpRequest-–æ–±—ä–µ–∫—Ç
	let xhr = new XMLHttpRequest();

	// 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –µ–≥–æ: GET-–∑–∞–ø—Ä–æ—Å –ø–æ URL 
	xhr.open('GET', url);
	xhr.responseType = 'json';

	// 3. –û—Ç—Å—ã–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å
	xhr.send();

	// 4. –≠—Ç–æ—Ç –∫–æ–¥ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –º—ã –ø–æ–ª—É—á–∏–º –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞
	xhr.onload = function () {
		if (xhr.status != 200) { // –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º HTTP-—Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ 200, —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
			console.log(`–û—à–∏–±–∫–∞ ${xhr.status}: ${xhr.statusText}`); // –ù–∞–ø—Ä–∏–º–µ—Ä, 404: Not Found
		} else { // –µ—Å–ª–∏ –≤—Å—ë –ø—Ä–æ—à–ª–æ –≥–ª–∞–¥–∫–æ, –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
			let responseXHR = xhr.response;
			console.log(responseXHR.activity);

			bodyNode.classList.add('activity-bg');
			appTitleNode.innerText = 'üöÄ –£—Ä–∞, —Ç–µ–ø–µ—Ä—å –Ω–µ —Å–∫—É—á–Ω–æ ü™ê'
			appTextNode.innerHTML = `üí•<span class="span">&nbsp;${responseXHR.activity}&nbsp;</span>üí•`;
		}
	};

	// –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
	// xhr.onprogress = function (event) {
	// 	if (event.lengthComputable) {
	// 		console.log(`–ü–æ–ª—É—á–µ–Ω–æ ${event.loaded} –∏–∑ ${event.total} –±–∞–π—Ç`);
	// 	} else {
	// 		console.log(`–ü–æ–ª—É—á–µ–Ω–æ ${event.loaded} –±–∞–π—Ç`); // –µ—Å–ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ Content-Length
	// 	}
	// };

	// –∑–∞–ø—Ä–æ—Å –Ω–µ –ø–æ–ª—É—á–∏–ª—Å—è
	xhr.onerror = function () {
		console.log("–ó–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è");
	};
};


// —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏
function debugging() {
	bodyNode.classList.add('activity-bg');
	appTitleNode.innerText = 'üöÄ –£—Ä–∞, —Ç–µ–ø–µ—Ä—å –Ω–µ —Å–∫—É—á–Ω–æ ü™ê'
	appTextNode.innerHTML = `üí•<span class="span">&nbsp;–ü—Ä–∏–º–µ—Ä&nbsp;</span>üí•`;
}









//*********************************** */

/*–í–∞—Ä–∏–∞–Ω—Ç 2. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è jQuery */

$(document).ready(function () {
	//console.log('–ì–æ—Ç–æ–≤–æ!');

	/* jQuery. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–æ–≤ jQuery */
	//$('#app-btn').on('click', getRandomActivityJQuery);

	/* –ü—Ä–æ–≤–µ—Ä–∫–∞ */
	//$('#app-btn').on('click', debuggingJQuery); // –ø—Ä–æ–≤–µ—Ä–∫–∞


	// —Ñ—É–Ω–∫—Ü–∏—è —Å –º–µ—Ç–æ–¥–∞–º–∏ $.ajax,$.get –∏ $.getJSON
	function getRandomActivityJQuery() {

		// var-2.1
		$.ajax({
			url: url,
			method: 'get',
			dataType: 'json',
			cache: false,
			success: function (data) {
				console.log(data.activity);
				$('body').addClass('activity-bg');
				$('#app-title').text('üöÄ –£—Ä–∞, —Ç–µ–ø–µ—Ä—å –Ω–µ —Å–∫—É—á–Ω–æ ü™ê');
				let str = 'üí•<span class="span">&nbsp;' + data.activity + '&nbsp;</span>üí•';
				$('#app-text').html(str);
			},
			error: function (jqXHR, exception) {
				if (jqXHR.status === 0) {
					alert('Not connect. Verify Network.');
				} else if (jqXHR.status == 404) {
					alert('Requested page not found (404).');
				} else if (jqXHR.status == 500) {
					alert('Internal Server Error (500).');
				} else if (exception === 'parsererror') {
					alert('Requested JSON parse failed.');
				} else if (exception === 'timeout') {
					alert('Time out error.');
				} else if (exception === 'abort') {
					alert('Ajax request aborted.');
				} else {
					alert('Uncaught Error. ' + jqXHR.responseText);
				}
			}
		});



		// var-2.2
		/* 	$.get(url, function (data) {
				if (data.isValid == false) {
					console.log('yyy');
					return false;
				}
				console.log(data.activity);
				$('body').addClass('activity-bg');
				$('#app-title').text('üöÄ –£—Ä–∞, —Ç–µ–ø–µ—Ä—å –Ω–µ —Å–∫—É—á–Ω–æ ü™ê');
				let str = 'üí•<span class="span">&nbsp;' + data.activity + '&nbsp;</span>üí•';
				$('#app-text').html(str);
			}); */




		// var-2.3
		/* 	$.getJSON(url,
				function (data) {
					if (data.isValid == false) {
						console.log('yyy');
						return false;
					}
					console.log(data.activity);
					$('body').addClass('activity-bg');
					$('#app-title').text('üöÄ –£—Ä–∞, —Ç–µ–ø–µ—Ä—å –Ω–µ —Å–∫—É—á–Ω–æ ü™ê');
					let str = 'üí•<span class="span">&nbsp;' + data.activity + '&nbsp;</span>üí•';
					$('#app-text').html(str);
				}
			); */
	}





	// —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏
	function debuggingJQuery() {
		let example = '–ø—Ä–∏–º–µ—Ä'
		let debugStr = 'üí•<span class="span">&nbsp;' + example + '&nbsp;</span>üí•';

		$('body').addClass('activity-bg');
		$('#app-title').text('üöÄ –£—Ä–∞, —Ç–µ–ø–µ—Ä—å –Ω–µ —Å–∫—É—á–Ω–æ ü™ê');
		$('#app-text').html(debugStr);
	}

});